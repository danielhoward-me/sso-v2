//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type ProfilePicture string

const (
	ProfilePicture_Custom    ProfilePicture = "custom"
	ProfilePicture_Identicon ProfilePicture = "identicon"
	ProfilePicture_Monsterid ProfilePicture = "monsterid"
	ProfilePicture_Wavatar   ProfilePicture = "wavatar"
	ProfilePicture_Retro     ProfilePicture = "retro"
	ProfilePicture_Robohash  ProfilePicture = "robohash"
)

func (e *ProfilePicture) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "custom":
		*e = ProfilePicture_Custom
	case "identicon":
		*e = ProfilePicture_Identicon
	case "monsterid":
		*e = ProfilePicture_Monsterid
	case "wavatar":
		*e = ProfilePicture_Wavatar
	case "retro":
		*e = ProfilePicture_Retro
	case "robohash":
		*e = ProfilePicture_Robohash
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for ProfilePicture enum")
	}

	return nil
}

func (e ProfilePicture) String() string {
	return string(e)
}
